name: Unit Tests

on:
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.test-coverage.outputs.coverage }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y podman make

      - name: Run tests with coverage
        id: test-coverage
        run: |
          make test-ci
          go tool cover -func=coverage/coverage.out
          COVERAGE=$(go tool cover -func=coverage/coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/coverage.out

  coverage:
    name: Coverage Check (${{ needs.test.outputs.coverage }}%)
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Validate coverage
        run: |
          # Install bc for floating point comparison
          sudo apt-get update && sudo apt-get install -y bc

          COVERAGE=${{ needs.test.outputs.coverage }}
          MIN_COVERAGE=72.9

          if [[ -z "$COVERAGE" ]]; then
            echo "‚ùå Error: Coverage value is empty!"
            exit 1
          fi

          echo "üìä Coverage: $COVERAGE%"
          echo "üéØ Minimum: $MIN_COVERAGE%"

          if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
            echo "‚ùå Coverage check failed: $COVERAGE% < $MIN_COVERAGE%"
            exit 1
          else
            echo "‚úÖ Coverage check passed: $COVERAGE% >= $MIN_COVERAGE%"
          fi